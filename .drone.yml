kind: pipeline
type: docker
name: CI_pipeline

trigger:
  event:
    - pull_request
  branch:
    include :
      - 56-CI
    exclude :
      - doc*

steps:
  - name: build
    image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dotnet9-maui:latest
    commands:
      - cd src/ 
      - cd Memory/
      - dotnet workload restore
      - dotnet restore Memory.sln
      - dotnet build Memory.sln -c Release --no-restore
    #- dotnet publish Memory.sln -c Release --no-restore -o $CI_PROJECT_DIR/build/release

    
  - name: tests
    image: mcr.microsoft.com/dotnet/sdk:9.0
    commands:
      - cd src/
      - cd Memory/
      - dotnet workload restore
      - dotnet restore Memory.sln
      - dotnet test Memory.sln --no-restore
    depends_on: [build]

  - name: code-inspection
    image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dronesonarplugin-dotnet9-maui
    secrets: [ SONAR_TOKEN ]
    settings:
      sonar_host: https://codefirst.iut.uca.fr/sonar/
      sonar_token:
        from_secret: SONAR_TOKEN
    commands: 
      - cd src/
      - cd Memory/
      - dotnet workload restore
      - dotnet restore Memory.sln
      - dotnet sonarscanner begin /k:MyProjectKey /d:sonar.host.url=$${PLUGIN_SONAR_HOST} /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.coverage.exclusions="Tests/**" /d:sonar.login=$${PLUGIN_SONAR_TOKEN} 
      - dotnet build Memory.sln -c Release --no-restore
      - dotnet test Memory.sln --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
      #- dotnet publish Memory.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet sonarscanner end /d:sonar.login=$${PLUGIN_SONAR_TOKEN}
    depends_on: [build, tests]
 