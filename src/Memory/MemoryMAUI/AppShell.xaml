<?xml version="1.0" encoding="UTF-8" ?>
<Shell
    x:Class="MemoryMAUI.AppShell"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:pages="clr-namespace:MemoryMAUI.Pages"
    xmlns:local="clr-namespace:MemoryMAUI"
    Shell.FlyoutBehavior="Flyout"
    Title="MemoryMAUI"
    Shell.NavBarIsVisible="False">


    <ShellContent
        ContentTemplate="{DataTemplate local:MainPage}"
        Title="MainPage"
        Route="mainpage"/>

    <ShellContent
        ContentTemplate="{DataTemplate pages:MemoryRulesPage}"
        Title="MemoryRulesPage"
        Route="rulespages"/>

    <ShellContent
        ContentTemplate="{DataTemplate pages:SingleplayerGamePage}"
        Title="SingleplayerGamePage" 
        Route="singleplayergamepage"/>

    <ShellContent
        ContentTemplate="{DataTemplate pages:SingleplayerPage}"
        Title="SingleplayerPage"
        Route="singleplayerpage"/>

    <ShellContent
        ContentTemplate="{DataTemplate pages:TwoPlayersGamePage}"
        Title="TwoPlayersGamePage" 
        Route="twoplayersgamepage"/>

    <ShellContent
         ContentTemplate="{DataTemplate pages:TwoPlayersPage}"
         Title="TwoPlayersPage" 
         Route="twoplayerspage"/>

    <ShellContent
       ContentTemplate="{DataTemplate pages:CreditsPage}"
       Title="CreditsPage"
       Route="creditspage"/>

    <ShellContent
        ContentTemplate="{DataTemplate pages:LeaderboardPage}"
        Title="LeaderboardPage" 
        Route="leaderboardpage"/>

    //Shell.Current.GoToASync("credits") credits sera mis en route dans le shellcontent. 
    //await = attend que l'opération est terminée pour passer a la ligne d'apres
    // await nécessite de declarer la méthode async donc si il y a await il y a async. 
    // async est dans la décla de méthode (private async void....)
    
</Shell>
